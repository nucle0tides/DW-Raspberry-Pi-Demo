Participant Requirements 
	-Partner
	-Laptop w/ internet connection
	-Putty (for Windows users) (Mac users can just SSH using the terminal)
	-FileZilla (makes it easy to copy+paste pictures to create timelapse on a normal laptop)

Workshop Overview: 

Brief RPI + setup overview 
	-"What did Gabby + exec do to allow you angels to play on these RaspberryPi's"

SSH for command-line interface. 

SSH for Windows: 
	-open Putty
	-under Host Name box 
		-piname.student.iastate.edu
	-under Port box 
		-22
	-make sure connection type is SSH 
	-Open 
	-Accept (key)
	-username: pi 
	-password: raspberry
SSH for Mac
	-Appilcations, Utilities, Terminal 
	-SSH piname.student.iastate.edu
	-username: pi
	-password: raspberry

Get FileZilla ready
-piname.student.iastate.edu
-pi
-raspberry
-22

SHORT VNC DEMO
-To start VNC server: vncserver + enter 
	-make note of New 'X' desktop is piname:2
-Open VNC client 
	-enter name you made note of, press enter
	-enter password
	-WOW, LOOK AT THAT BEAUTIFUL DESKTOP

LETS TAKE OUR FIRST IMAGE
in terminal 
	cd Desktop
		this will change the directory we're working in to our Desktop
	'raspistill -o test.jpg'
in FileZilla
	navigate to the pi's Desktop
	drag and drop the image to your Desktop within FileZilla

OKAY WHAT OTHER THINGS CAN WE DO? 
	'raspbistill -o test.jpg -ifx +image effect name+'
	'raspistill -o test.jpg -ifx -posterise'
	Try out a few others: 
	http://www.raspberrypi.org/documentation/raspbian/applications/camera.md
	sketch, oilpaint, solarize, posterise, hatch, etc

Where does Python come into play? 
	PICAMERA! Hip and fun API for controlling the raspberry pi camera, super useful, docs have tons of example code. 

Let's try it out! 
	in the terminal: 
		type 'sudo nano test.py', this will create a new python file for us. 
	in this text editor, right click to paste 
		import time
		import picamera

		with picamera.PiCamera() as camera:
		    camera.resolution = (1024, 768)
		    camera.start_preview()
		    # Camera warm-up time
		    time.sleep(2)
		    camera.capture('foo.jpg')
	ctrl O to save, and ctrl X to exit out of it

Lets add an image effect now 
	add 'camera.image_effect =' to your test.py  file
	choose an image effect from (https://picamera.readthedocs.org/en/release-1.9/api.html#picamera.PiCamera.image_effect)
	put that in " " after the equals sign
	run the script

	import time
		import picamera

		with picamera.PiCamera() as camera:
		    camera.resolution = (1024, 768)
		    camera.image-effect = none
		    camera.start_preview()
		    # Camera warm-up time
		    time.sleep(2)
		    camera.capture('foo.jpg')

This is lame, Gabby. Let's do something cooler like take multiple images and put them all together to take a timelapse or something. 

	So there are multiple ways one could create a timelapse. We're going to use the capture_continuous method and put all of the images into an online gif maker

	Create a new file called timelapse.py, or whatever your heart desires. 

	This code will take one image a minute for 60 minutes, i.e, 60 images. 
		import picamera
		import time

		camera = picamera.PiCamera()
		camera.resolution = (1280, 720)
		time.sleep(1) # Camera warm-up time
			for i, filename in enumerate(camera.capture_continuous('image{counter:02d}.jpg')):
		        print('Captured %s' % filename)
		        # Capture one image a minute
		        time.sleep(60)
		        if i == 59:
		            break

	For times sake, we're going to change this to one image every 3 or 5 seconds. 

	Run the script. Make awkward small talk. 
	Once completed, go to FileZilla, refresh, and copy all of the images somewhere safe (like a folder)

	NOW LETS MAKE A GIF. 
	Go to gifmaker.me and upload all of the images.

	YOU DID IT, THANKS FOR PARTICIPATING.  